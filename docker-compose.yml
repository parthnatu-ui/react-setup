# docker-compose.yml

services:
  frontend:
    build:
      context: ./ # Build context is the frontend directory
      dockerfile: Dockerfile.frontend # Use the Dockerfile for React
    volumes:
      - ./frontend:/app # Mount source for dev, but build output will be copied
    # This service is primarily to build the React app.
    # We don't expose its port directly as Nginx will serve its build output.
    # We might add a command to keep it running if we wanted to interact with its build environment
    # command: ["tail", "-f", "/dev/null"] # Keep container alive after build for inspection
    # Or, if you just want to build it and pass output to nginx:
    # command: ["/bin/true"] # A command that exits after build

  backend:
    build:
      context: ./ # Build context is the backend directory
      dockerfile: Dockerfile.backend # Use the Dockerfile for FastAPI
    ports:
      - "8000:8000" # Expose backend port for debugging, but Nginx will use internal network
    environment:
      # Example: if your backend needs env vars
      DEBUG: "true"
    volumes:
      - ./backend:/app # Mount source code for live changes during dev
    depends_on:
      - frontend # Ensure frontend is built before backend attempts to run if dependencies are complex

  nginx:
    image: nginx:stable-alpine # Use the official Nginx image
    ports:
      - "80:80" # Map host port 80 to container port 80 (Nginx default)
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Mount Nginx config
      - ./frontend/build:/usr/share/nginx/html:ro # Mount React build output to Nginx's serving directory
    depends_on:
      - backend # Nginx depends on backend (to proxy requests)
      - frontend # Nginx depends on frontend (to get the build output)